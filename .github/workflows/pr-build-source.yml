name: PR build workflow

on: 
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  checks: write

jobs:
  pr-code-build:
    name: Build and test source code
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout out pr branch
        uses: actions/checkout@v3
      - name: View working folder
        run:  tree
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
      - name: Compile
        run: |
          cd chapter8
          mvn --batch-mode clean compile
      - name: Unit test
        run: |
          cd chapter8
          ./run_unittest.sh
  pr-api-minium-review-criteria:
    name: Minimum API design reivew criteria
    runs-on: ubuntu-latest
    steps:
      - name: Checkout out pr branch
        uses: actions/checkout@v3
        with:
          path: revision
      - name: View working folder
        run:  tree
      - name: Run API linting
        run: | 
          npx spectral lint "./revision/chapter8/product-catalog.oas.yaml" --ruleset "./revision/chapter8/rulesets/json-api.ruleset.yaml"
      - name: Check out main branch
        uses: actions/checkout@v3
        with:
          ref: main
          path: base
      - name: View working folder
        run: |
          ls -lash
          ls -lash revision
          tree
      - name: Breaking change checks
        id: test_breaking_changes
        uses: oasdiff/oasdiff-action/check-breaking@main
        with:
          base: './base/chapter8/product-catalog.oas.yaml'
          revision: './revision/chapter8/product-catalog.oas.yaml'
          fail-on-diff: true
      - name: Prose linting
        uses: errata-ai/vale-action@reviewdog
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          vale_flags: "--config=revision/.vale.ini"
          files: '["revision/chapter8/docs"]'
